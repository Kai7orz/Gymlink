services:
  nuxt:
    build:
      context: .
      dockerfile: docker/nuxt/Dockerfile
    container_name: nuxt
    ports:
      - 3000:3000
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./front:/app:cached
      - nuxt_node_modules:/app/node_modules
    command: sh -c '(npm ci || npm install) && npm run dev'
    extra_hosts:
      - "host.docker.internal:host-gateway"

  go:
    container_name: go
    build:
      context: .
      dockerfile: docker/golang/Dockerfile
    tty: true
    ports:
      - 8080:8080
    env_file:
      - ./mysql/.env
    depends_on:
      - db
    volumes:
      - type: bind
        source: ./backend/golang/src
        target: /go/src

  db:
    container_name: db
    build:
      context: .
      dockerfile: docker/mysql/Dockerfile
    tty: true
    ports:
      - 3307:3306
    env_file:
      - ./mysql/.env
    volumes:
      - type: volume
        source: mysql_test_volume
        target: /var/lib/mysql
      - type: bind 
        source: ./mysql/init
        target: /docker-entrypoint-initdb.d

  swagger-editor:
    image: swaggerapi/swagger-editor
    container_name: "swagger-editor"
    ports: 
      - "8001:8080"

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "swagger-ui"
    ports:
      - "8002:8080"
    volumes:
      - ./api/openapi.yaml:/openapi.yaml
    environment:
      - SWAGGER_JSON=/openapi.yaml
    
  swagger-api:
    image: stoplight/prism:3
    container_name: "swagger-api"
    ports:
      - "8003:4010"
    command: mock -h 0.0.0.0 /openapi.yaml
    volumes:
      - ./api/openapi.yaml:/openapi.yaml

volumes:
  nuxt_node_modules:
  mysql_test_volume:
    name: mysql_test_volume