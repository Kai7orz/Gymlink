openapi: 3.0.0
info:
  version: 1.0.0
  title: Sample API
  description: >-
    A sample API that uses a sample-site as an example to demonstrate features in
    the OpenAPI 3.0 specification
servers:
  - url: 'http://localhost:8003'
paths:
# 新規登録画面
  /users:
    post:
      summary: ユーザー登録
      description: Firebase認証後にバックエンドに登録する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                avatar_url:
                  type: string
      responses:
        "201":
          description: ユーザー作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: 既に存在するUIDで登録しようとした

  # ログイン画面
  /login:
    post:
      summary: ログイン(Firebaseトークン検証)
      description: フロントエンドから渡されるFirebase IDトークンを検証し、ユーザーを返す
      security:
        - bearerAuth: []
      responses:
        "200":
          description: ユーザーが存在する
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: ユーザーが存在しない
        "401":
          description: トークンが無効または期限切れ

  /user_profiles/{user_id}:
    get:
      description: >
        Return user profile
      responses:
        '200':
          description: user profile response
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/UserProfile'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{user_id}/exercises:
    get:
      summary: Get exercises records for a user by ID)
      description: ログインしたユーザの運動投稿記録を取得するための API
      responses:
        '200':
          description: A list of exercises
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Exercise'
  
  /exercises:
    get:
      summary: Get latest 20 exercises records
      description: /users/exercises とは異なり自身の記録ではなく，投稿された記録の最新20件を取り出すための API 
      responses:
        '200':
          description: A list of exercises
          content:
            application/json:
              schema:
                  example:
                    - id: 1
                      user_id: 2
                      user_name: "taro"
                      exercise_image: "/images/sportImage.png"
                      exercise_time: 45
                      exercise_date: "2024-01-01T10:00:00Z"
                      comment: "いい感じに動けた"
                      likes_count: 3
                    - id: 2
                      user_name: "yumi"
                      user_id: 22
                      exercise_image: "/images/sportImage.png"
                      exercise_time: 30
                      exercise_date: "2024-01-02T10:00:00Z"
                      comment: "疲れた"
                      likes_count: 0
                    - id: 3
                      user_id: 10
                      user_name: "satoshi"
                      exercise_image: "/images/sportImage.png"
                      exercise_time: 60
                      exercise_date: "2024-01-03T10:00:00Z"
                      comment: "最高の気分"
                      likes_count: 1

    post:
      summary: Create a new exercise record for a user by ID 
      requestBody:
        description: Exercise to add to the user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RawExercise'
      responses:
        200:
          description: Successfully created exercise
          content:
              application/json:
                schema:
                  example:
                    code: 200 
                    message: "ok"
  
  # ホーム画面 & 投稿共有画面
  /likes:
    post:
      summary: 運動記録に「いいね」する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise_record_id:
                  type: integer
      responses:
        "201":
          description: いいね成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code: { type: integer, example: 201 }
                  message: { type: string, example: "created" }
        
  /likes/{exercise_record_id}:
    delete:
      summary: 運動記録のいいねを外す
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          name: exercise_record_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: いいね解除成功

  /follows:
      post:
        summary: フォローする
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  follower_id:
                    type: integer
                  followed_id:
                    type: integer
        responses:
          "201":
            description: フォロー成功
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    code: { type: integer, example: 201 }
                    message: { type: string, example: "created" }
          
            
    # 他人のプロフィール画面 & フォロー画面 & フォロワー画面
  /users/unfollows:
    delete:
      summary: フォロー解除
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                follower_id:
                  type: integer
                followed_id:
                  type: integer
      responses:
        "200":
          description: フォロー解除成功
  # キャラクター画面
  /user_characters/{user_id}:
    get:
      summary: ユーザーのキャラクター情報を取得
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: キャラクター情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCharacter"

    
## 複数レスポンスの例を分離したかっただけなので このエンドポイントは本番環境では利用しないです．
  /users/{userId}/exercises-example:
    get:
      summary: Get exercises records for a user by ID)
      parameters:
        - in: path
          name: userId 
          schema:
            type: integer
            format: "int64"
          required: true
          description: Numeric ID of the user to get exercises
      responses:
        '200':
          description: A list of exercises
          content:
            application/json:
              schema:
                  example:
                    - id: 1
                      imageUrl:  '/images/sportImage.png'
                      exercise_time: 45
                      exercise_date: "2024-01-01T10:00:00Z"
                      comment: "いい感じに動けた"
                      likesCount: 3
                    - id: 2
                      imageUrl:  '/images/sportImage.png'
                      exercise_time: 30
                      exercise_date: "2024-01-02T10:00:00Z"
                      comment: "疲れた"
                      likes_count: 0
                    - id: 3
                      imageUrl:  '/images/sportImage.png'
                      exercise_time: 60
                      exercise_date: "2024-01-03T10:00:00Z"
                      comment: "最高の気分"
                      likesCount: 1
                    - id: 4
                      imageUrl:  '/images/sportImage.png'
                      exercise_time: 20
                      exercise_date: "2024-01-04T10:00:00Z"
                      comment: "もう少し頑張れたかも"
                      likesCount: 2
                    - id: 5
                      imageUrl:  '/images/sportImage.png'
                      exercise_time: 50
                      exercise_date: "2024-01-05T10:00:00Z"
                      comment: "楽しかった"
                      likesCount: 2
                    - id: 6
                      imageUrl:  '/images/sportImage.png'
                      exercise_time: 40
                      exercise_date: "2024-01-06T10:00:00Z"
                      comment: "次はもっと頑張る"
                      likesCount: 1

components:
  schemas:
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 1
        name:
          type: "string"
          example: "Taro"
    
    UserProfile:
      type: "object"
      properties:
        id:
          type: "integer" 
          format: "int64"
          example: 1
        name:
          type: "string"
          example: "Taro"
        profile_image:
          type: "string"
          example: "/images/test.png"        
        follow_count:
          type: "integer"
          format: "int64"
          example: 4
        follower_count:
          type: "integer"
          format: "int64"
          example: 60

    Exercise:
      type: "object"
      required:
        - "id" 
        - "exercise_image" 
        - "exercise_time" 
      properties:
        id:
          type: "integer"
          format: "int64" 
          example: 1 
        user_id:
          type: "integer"
          example: 20
        user_name:
          type: "string"
          example: "ABC"
        exercise_image:
          type: "string" 
          example:  '/images/sportImage.png'
        exercise_time:
          type: "integer"
          format: "int64" 
          example: 45
        exercise_date:
          type: "string"
          format: "date-time"
          example: "2024-01-01T10:00:00Z"
        comment:
          type: "string"
          example: "いい感じに動けた"
        likes_count:
          type: "integer"
          example: 3

    RawExercise:
      type: "object" 
      required:
        - "exercise_image" 
        - "exercise_time" 
      properties:
        exercise_image:
          type: "string"  
          example: "/images/test.png"
        exercise_time: 
          type: "integer"
          format: "int64"
          example: 20 
        exercise_date:
          type: "string"
          example: "2024-01-01T10:00:00Z"
        comment:
          type: "string"
          example: "いい感じに動けた"

    Team:
      type: object
      required:
        - teamName
        - teamTarget
        - member
      properties:
        teamName:
          type: string
          description: チーム名
          example: DAKAI
        teamTarget:
          type: integer
          description: チームの目標
          example: 10
        member:
          type: array
          description: チームメンバー一覧
          items:
            type: object
            required: [name, profile_image, exercise_count]
            properties:
              name:
                type: string
                description: メンバー名
                example: taro
              profileImage:
                type: string
                description: プロフィール画像 URL
                example: /images/test.png
              exerciseCount:
                type: integer
                description: メンバーの運動投稿回数
                example: 3
        
    UserCharacter:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        character_id:
          type: integer
        level:
          type: integer
        current_points:
          type: integer
        required_points:
          type: integer
        character_animation:
          type: string
          example: /assets/animations/huwaData.json
          
    Error:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        message:
          type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
